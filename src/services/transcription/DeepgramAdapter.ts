// DeepgramAdapter - –∞–¥–∞–ø—Ç–µ—Ä –¥–ª—è DeepgramService
// –†–µ–∞–ª–∏–∑—É–µ—Ç ITranscriptionService –∏ –¥–µ–ª–µ–≥–∏—Ä—É–µ—Ç –≤—Å–µ –≤—ã–∑–æ–≤—ã –∫ DeepgramService

import { ITranscriptionService } from '../../types/ITranscriptionService';
import { DeepgramService, TranscriptEvent } from '../deepgram';

export class DeepgramAdapter implements ITranscriptionService {
  private deepgramService: DeepgramService;

  constructor(deepgramService: DeepgramService) {
    this.deepgramService = deepgramService;
  }

  // –î–µ–ª–µ–≥–∏—Ä—É–µ–º –í–°–ï –º–µ—Ç–æ–¥—ã –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É DeepgramService
  async connect(): Promise<void> {
    return this.deepgramService.connect();
  }

  disconnect(): void {
    this.deepgramService.disconnect();
  }

  sendAudio(audioData: ArrayBuffer): void {
    this.deepgramService.sendAudio(audioData);
  }

  onTranscript(callback: (event: TranscriptEvent) => void): void {
    // –í DeepgramService callback —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ
    // –ó–¥–µ—Å—å –º—ã –ø—Ä–æ—Å—Ç–æ –¥–µ–ª–µ–≥–∏—Ä—É–µ–º –≤—ã–∑–æ–≤
    console.log('üìù DeepgramAdapter: onTranscript callback set');
  }

  onError(callback: (error: string) => void): void {
    // –í DeepgramService callback —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ
    // –ó–¥–µ—Å—å –º—ã –ø—Ä–æ—Å—Ç–æ –¥–µ–ª–µ–≥–∏—Ä—É–µ–º –≤—ã–∑–æ–≤
    console.log('‚ùå DeepgramAdapter: onError callback set');
  }
}
